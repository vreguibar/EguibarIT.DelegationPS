name: Publish Module

# Controls when the workflow will run
on:
  pull_request:
    branches: [main]

  workflow_dispatch:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e., v1.0, v20.15.10

jobs:
  # 1st Job -- Setup environment
  setup_environment:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checkout the Repository
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install Active Directory module
        shell: pwsh
        run: |
          Install-WindowsFeature -Name RSAT-AD-PowerShell

      - name: Install Group Policy Console (get GroupPolicy module)
        shell: pwsh
        run: |
          Install-WindowsFeature -Name GPMC

      - name: Install Module Dependencies
        shell: pwsh
        run: |
          Install-Module -Name Pester           -Force
          Install-Module -Name PSScriptAnalyzer -Force
          Install-Module -Name PowerShellGet    -Force
          Install-Module -Name platyPS          -Force
          Install-Module -Name InvokeBuild      -Force

      - name: Import Modules
        shell: pwsh
        run: |
          # Explicitly load the Active Directory module
          Import-Module -Name ActiveDirectory -Force
          Import-Module -Name GroupPolicy     -Force

      - name: Run PSScriptAnalyzer on different folders
        shell: pwsh
        run: |
            Invoke-ScriptAnalyzer -Path .\Public  -recurse
            Invoke-ScriptAnalyzer -Path .\Private -recurse
            Invoke-ScriptAnalyzer -Path .\Enums   -recurse
            Invoke-ScriptAnalyzer -Path .\Classes -recurse

      - name: Invoke Build
        shell: pwsh
        run: pwsh -command "Invoke-Build -File ./build.ps1 -Configuration 'Release' -ExportAlias"

      - name: Push changes to Git Repository
        run: |
          git config --global user.name 'vreguibar'
          git config --global user.email 'vicente@eguibarIT.com'
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git add .
          git commit -am "Pushing Artifacts"
          git push

      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: module-artifact
          path: ./Artifact/


  # 2nd Job -- Release and Publish
  release_and_publish:
    needs: setup_environment
    runs-on: ubuntu-latest

    steps:
      - name: Update Module Manifest
        shell: pwsh
        run: |
          $newVersion = ('v{0}' -f (Test-ModuleManifest -Path ".\EguibarIT.psd1").Version)
          $manifestPath = '.\EguibarIT.psd1'
          (Get-Content -Path $manifestPath -Raw) -replace 'Version = ''\d+\.\d+\.\d+''', "Version = '$newVersion'" | Set-Content -Path $manifestPath

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.release_and_publish.outputs.newVersion }}
          release_name: Release ${{ steps.release_and_publish.outputs.newVersion }}
          draft: false
          prerelease: false

      - name: Publish to PowerShell Gallery
        uses: pcgeek86/publish-powershell-module-action@v20
        with:
          modulePath: ./Artifact/
          NuGetApiKey: ${{ secrets.PS_GALLERY_KEY }}
